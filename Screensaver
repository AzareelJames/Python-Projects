import turtle
import random
import time
import keyboard

screen = turtle.Screen()
screen.bgcolor("black")
screen.setup(width=1.0, height=1.0)
screen._root.attributes('-fullscreen', True)
screen.tracer(0)

w = screen.window_width() // 2
h = screen.window_height() // 2
screen.title("Screensaver")

colors = ["red", "orange", "yellow", "green", "blue", "purple", "pink"]
shapes = ["square", "circle", "triangle", "arrow"]
shape_index = 0

t = turtle.Turtle()
t.shape(shapes[shape_index])
t.color(random.choice(colors))
t.penup()
t.goto(0, 0)
t.shapesize(5)

tracker = turtle.Turtle()
tracker.penup()
tracker.hideturtle()
tracker.goto(0, 0)
tracker.setheading(135)

speed = 5
half_size = 20

def bounce():
    angle = tracker.heading()
    x, y = t.xcor(), t.ycor()
    bounced = False
    if x > w - half_size or x < -w + half_size:
        angle = 180 - angle
        bounced = True
    if y > h - half_size or y < -h + half_size:
        angle = -angle
        bounced = True
    if bounced:
        tracker.setheading(angle)
        t.color(random.choice(colors))

def exit_program():
    turtle.bye()

screen.listen()
screen.onkey(exit_program, "Escape")

while True:
    if keyboard.is_pressed("left"):
        shape_index = (shape_index - 1) % len(shapes)
        t.shape(shapes[shape_index])
        time.sleep(0.2)
    if keyboard.is_pressed("right"):
        shape_index = (shape_index + 1) % len(shapes)
        t.shape(shapes[shape_index])
        time.sleep(0.2)
    tracker.forward(speed)
    t.goto(tracker.pos())
    bounce()
    screen.update()
    time.sleep(0.01)
